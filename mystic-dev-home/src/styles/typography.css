/**
 * Mystic Dev Website (https://thedevmystic.github.io
 *                     && https://mystic-dev.eu org)
 *
 * @file typography.css
 *
 * @desc This CSS file is our big boy for typography ;)
 *
 * @sa reset.css     for full html reset.
 * @sa variables.css for color, font and typography variables.
 * @sa font.css      for custom font and fallback fonts.
 */

/* Container & Grid (preserve original grid tokens) */
.container {
  max-width: var(--grid-max-width);
  padding-inline: var(--grid-gutter);
  margin-inline: auto;
}

.grid {
  display: grid;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  gap: var(--grid-gutter);
}

.grid-1 { grid-template-columns: repeat(1, 1fr); }
.grid-2 { grid-template-columns: repeat(2, 1fr); }
.grid-3 { grid-template-columns: repeat(3, 1fr); }
.grid-4 { grid-template-columns: repeat(4, 1fr); }
.grid-5 { grid-template-columns: repeat(5, 1fr); }
.grid-6 { grid-template-columns: repeat(6, 1fr); }

/* Stack utility (keeps consistent vertical rhythm) */
.stack > * + * {
  margin-block-start: var(--space-stack);
}

/* Base HTML */
html {
  text-size-adjust: 100%;
  box-sizing: border-box;
  line-height: var(--line-height-body);

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  scroll-behavior: smooth;
  -webkit-tap-highlight-color: transparent;

  min-height: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

@media (prefers-reduced-motion: reduce) {
  html { scroll-behavior: auto; }
}

*, *::before, *::after { box-sizing: inherit; }

/* Body: base typography uses semantic tokens */
body {
  font-family: "Open Sans", "Open Sans Fallback", system-ui, -apple-system,
               "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  font-size: var(--font-body);
  font-weight: var(--weight-regular);
  font-style: var(--style-normal);
  line-height: var(--line-height-body);

  background-color: var(--color-background);
  color: var(--color-body);

  height: 100%;
  margin: 0;
  padding: var(--space-xs);

  display: flex;
  flex-direction: column;
  overflow-x: hidden;
}

/* Prevent first element from having top spacing (very-first element on page) */
body > *:first-child {
  padding: 0;
  margin-block-start: 0;
}

/* Sections */
section {
  margin-block: var(--space-m);
  padding-block: var(--space-s);
  border-block-start: 2px solid var(--color-accent);
}

/* Headings
   - small top gap to group with previous content (var(--space-s))
   - larger bottom gap to keep rhythm (var(--space-stack))
   - font-size strictly from --font-h1..6
*/
h1, h2, h3, h4, h5, h6 {
  font-family: "Montserrat", "Montserrat Fallback", system-ui, -apple-system,
               "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  font-weight: var(--weight-bold);
  font-style: var(--style-normal);
  font-feature-settings: "lnum", "liga", "kern";
  line-height: var(--line-height-heading);
  color: var(--color-heading);

  margin-block-start: var(--space-3xs);
  margin-block-end: var(--space-stack);
  
  /* Slight tight the heading */
  letter-spacing: -0.05em;

  /* ensure headings never exceed container width by text wrapping naturally */
  hyphens: auto;
  word-wrap: break-word;
}

/* Individual heading sizes (use variables only; preserve fluid clamp) */
h1, .aplha   { font-size: var(--font-h1); }
h2, .beta    { font-size: var(--font-h2); }
h3, .gamma   { font-size: var(--font-h3); }
h4, .delta   { font-size: var(--font-h4); }
h5, .epsilon { font-size: var(--font-h5); }
h6, .zeta    { font-size: var(--font-h6); }

/* Paragraphs and common blocks:
   - default bottom margin uses --space-stack to align rhythm
   - top margin reset to 0 (spacing controlled by element above)
*/
p, blockquote, ul, ol {
  margin-block-start: 0;
  margin-block-end: var(--space-stack);
}

/* Paragraph defaults */
p, li {
  font-size: var(--font-body);
  font-weight: var(--weight-regular);
  font-style: var(--style-normal);
  font-feature-settings: "onum", "liga", "kern";
  line-height: var(--line-height-body);
  color: var(--color-paragraph);
  max-width: 70ch;
}

/* Small and tiny semantic tokens */
small, .small, .eta { font-size: var(--font-small); }
.tiny, .theta      { font-size: var(--font-tiny); }

/* Weight modifier classes (use only weight tokens) */
.th, .thin   { font-weight: var(--weight-light); }
.reg, .regular { font-weight: var(--weight-regular); }
.med, .medium  { font-weight: var(--weight-medium); }
strong, .b, .bold { font-weight: var(--weight-bold); }
.blk, .black { font-weight: var(--weight-black); }

/* Style modifier classes */
.nor, .normal   { font-style: var(--style-normal); }
em, i, .ital, .italic { font-style: var(--style-italic); }

/* Upper / lower transforms use spacing tokens for letter-spacing via calc */
.upper {
  font-kerning: normal;
  letter-spacing: calc(var(--space-3xs) * 0.32); /* derived from small spacing token */
  text-transform: uppercase;
}
.lower, .small-caps {
  font-feature-settings: "smcp", "kern";
  font-kerning: normal;
  letter-spacing: calc(var(--space-3xs) * 0.32);
  text-transform: lowercase;
}

/* Numeral features */
.lining-numeral, .lnum { font-feature-settings: "lnum", "kern"; }
.oldstyle-numeral, .onum { font-feature-settings: "onum", "kern"; }

/* Links: use variables for colors and hover/focus tokens; simplified underline via bg gradient */
a, p a, li a {
  color: var(--color-link);
  text-decoration: none;
  transition: color .3s ease, background-image .3s ease;

  /* subtle underline effect built from color token */
  background-image: linear-gradient(to bottom, rgba(0,0,0,0) 65%, var(--color-link) 65%);
  background-repeat: repeat-x;
  background-size: 100% 0.12em;
  background-position: 0 100%;
}

/* Hover / active */
a:hover, a:active, a:focus,
p a:hover, p a:active, p a:focus,
li a:hover, li a:active, li a:focus {
  color: var(--color-hover);
  background-image: linear-gradient(to bottom, rgba(0,0,0,0) 65%, var(--color-hover) 65%);
}

/* Focus visible uses explicit focus color */
a:focus-visible, .ui-a:focus-visible {
  outline: 2px solid var(--color-focus);
  outline-offset: 2px;
}

/* UI Links */
.ui-a {
  color: var(--color-link);
  text-decoration: none;
  transition: color .3s ease;
}
.ui-a:hover, .ui-a:active, .ui-a:focus { color: var(--color-hover); }

/* Horizontal rule: use caption color and spacing tokens */
hr, .horizontal-rule {
  border: 0;
  height: var(--space-3xs);
  background-color: var(--color-caption);
  margin-block-start: var(--space-m);
  margin-block-end: var(--space-m);
  padding: 0;
}

/* Captions */
.caption, .cap {
  font-size: var(--font-small);
  font-weight: var(--weight-regular);
  font-style: var(--style-normal);
  font-feature-settings: "onum", "liga", "kern";
  line-height: var(--line-height-body);
  color: var(--color-caption);
  margin-block-start: 0;
  margin-block-end: var(--space-s);
}

/* If a caption immediately follows a heading we nudge it closer (still using tokens) */
h1 + .caption, .aplha + .caption,
h2 + .caption, .beta + .caption,
h3 + .caption, .gamma + .caption {
  margin-block-start: calc(var(--space-s) * -0.8); /* subtle overlap derived from tokens */
}

/* Blockquote */
blockquote {
  margin-block-start: 0;
  margin-block-end: var(--space-stack);
  padding-inline-start: var(--space-s);
  border-left: var(--space-3xs) solid var(--color-link);
  color: var(--color-paragraph);
  font-style: var(--style-italic);
}

/* Make blockquote paragraphs inherit paragraph rhythm */
blockquote p {
  font-style: var(--style-italic);
  margin-block-start: 0;
  margin-block-end: 0;
}

/* Responsive negative offset for smaller viewports (derived from token) */
@media (max-width: 48rem) {
  blockquote {
    padding-inline-start: calc(var(--space-s) * 0.5);
  }
}

/* Lists */
ul, ol {
  margin-block-start: 0;
  margin-block-end: var(--space-m);
  padding-inline-start: var(--space-m);
}

/* List items */
ul li,
ol li {
  font-feature-settings: "kern", "onum", "liga";
  margin-block-start: 0.35rem; /* small intra-list gap — convert to token if desired */
  line-height: var(--line-height-body);
  position: relative;
}

/* Ordered list counters */
ol {
  list-style-type: none;
  counter-reset: top-level;
}

ol li {
  counter-increment: top-level;
  padding-inline-start: var(--space-m);
}

ol li::before {
  content: counter(top-level) ".";
  font-feature-settings: "lnum", "tnum";
  position: absolute;
  left: calc(-1 * var(--space-m));
  width: var(--space-m);
  text-align: right;
  line-height: var(--line-height-body);
}

/* Unordered list bullets */
ul {
  list-style: none;
}

ul li::before {
  content: "•";
  position: absolute;
  left: calc(-1 * var(--space-m));
  width: var(--space-m);
  text-align: right;
  line-height: var(--line-height-body);
}

/* Nested lists spacing using tokens */
ul ul,
ul ol,
ol ul,
ol ol {
  margin-block-start: var(--space-s);
  margin-block-end: var(--space-m);
  margin-inline-start: var(--space-m);
  padding-inline-start: 0;
}

/* Tables */
table {
  font-family: inherit;
  font-size: var(--font-small);
  line-height: var(--line-height-body);
  font-weight: var(--weight-regular);
  font-style: var(--style-normal);
  font-feature-settings: "liga", "lnum", "tnum", "kern";

  width: 100%;
  border-collapse: collapse;
  margin-block-start: 0;
  margin-block-end: var(--space-s);
}

thead th {
  font-family: "Montserrat", "Montserrat Fallback", system-ui, -apple-system,
               "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  font-size: var(--font-body);
  line-height: var(--line-height-body);
  font-weight: var(--weight-bold);
  font-style: var(--style-normal);
  text-align: left;
  vertical-align: bottom;
  padding-inline: var(--space-s);
  padding-block: calc(var(--space-3xs) * 0.8);
}

tbody td {
  font-family: inherit;
  font-size: var(--font-small);
  line-height: var(--line-height-body);
  font-weight: var(--weight-regular);
  font-style: var(--style-normal);
  vertical-align: top;
  padding-inline: var(--space-s);
  padding-block: calc(var(--space-3xs) * 0.8);
}

/* Feature block (tokens for spacing) */
.feature {
  padding-block: var(--space-s);
  padding-inline: var(--space-s);
  margin-block-start: var(--space-s);
  margin-block-end: var(--space-s);
  text-align: center;
  background-color: var(--color-feature-background);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-image: var(--feature-image);
}

.feature .container {
  max-width: 60%;
  margin-inline: auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: var(--space-s);
}

/* Slightly larger padding on small viewports derived from tokens */
@media (max-width: 67.5rem) {
  .feature .container {
    padding-block: var(--space-l);
    padding-inline: var(--space-m);
  }
}

/* Layout components — keep sizing logic but use tokens for paddings/margins */
.section {
  margin-inline: auto;
  position: relative;
  width: 94%;
  max-width: var(--grid-max-width);
  display: flex;
  flex-wrap: wrap;
  gap: var(--grid-gutter);
}

.single-measure {
  max-width: 65ch;
  margin-inline: auto;
}

.column {
  margin-inline: auto;
  width: 100%;
  padding-inline: var(--space-s);
}

@media (min-width: 67.5rem) {
  .column { padding-inline: var(--space-m); }
}

.column--duo {
  flex: 0 0 50%;
}
.column--duo:nth-of-type(n+3) {
  margin-block-start: var(--space-m);
}

.column--trio {
  flex: 0 0 33.333%;
}
.column--trio:nth-of-type(n+3) {
  margin-block-start: var(--space-m);
}

.column--quad {
  flex: 0 0 50%;
}
@media (min-width: 48rem) {
  .column--quad { flex: 0 0 25%; }
}

.column--main {
  flex: 1 1 auto;
  max-width: 70ch;
}

.column--sidebar {
  flex: 0 0 auto;
  max-width: 25ch;
  padding-inline-end: var(--space-m);
}
@media (min-width: 48rem) {
  .column--sidebar { padding-inline-end: var(--space-l); }
}
.column--main + .column--sidebar { padding-inline-start: var(--space-m); }

/* Sidebar / small measure text uses smaller font token */
.column--trio p,
.column--quad p,
.column--sidebar p {
  font-size: var(--font-small);
  line-height: var(--line-height-body);
}
.column--trio li,
.column--quad li,
.column--sidebar li {
  font-size: var(--font-small);
  line-height: var(--line-height-body);
}

/* Code Styling: Uses Prism.js */
/* Pre block */
pre[class*="language-"], pre[class*="lang-"] {
  background: var(--color-code-background);
  padding-inline: var(--space-s);
  padding-block: calc(var(--space-3xs) * 0.8);
  margin-block-start: var(--space-s);
  margin-block-end: var(--space-s);
  overflow: auto;
  box-shadow: 0 4px 20px rgba(0,0,0,0.08);
  line-height: var(--line-height-code);
  font-family: "JetBrains Mono", "JetBrains Mono Fallback", ui-monospace, "Ubuntu Mono", "Consolas", 
               "Monaco", "Melno", "Roboto Mono", "Courier New", "Courier", monospace;
  font-size: var(--font-code);
  font-weight: var(--weight-regular);
  font-style: var(--style-regular);
  position: relative;
  transition: background 0.3s ease, color 0.3s ease;

  border-bottom-left-radius: 0.75rem;
  border-bottom-right-radius: 0.75rem;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

/* Code block */
code[class*="language-"], code[class*="lang-"] {
  background: none;
  color: var(--color-body);
}

/* Comments */
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: var(--color-comment);
  font-style: var(--style-italic);
}

/* Punctuations */
.token.punctuation {
  color: var(--color-punctuations);
}

/* Tags */
.token.tag {
  color: var(--color-tag);
}

/* Selectors */
.token.selector {
  color: var(--color-selector);
}

/* Properties */
.token.property {
  color: var(--color-property);
}

/* Attributes */
.token.attr-name {
  color: var(--color-attribute);
}

/* Boolean and numerics */
.token.boolean,
.token.number {
  color: var(--color-numeric);
}

/* Strings and chars */
.token.string,
.token.char,
.token.attr-value,
.token.regex {
  color: var(--color-string);
}

/* Keywords */
.token.keyword,
.token.important {
  color: var(--color-keyword);
}

/* Operators */
.token.operator {
  color: var(--color-operator);
}

/* Functions */
.token.function {
  color: var(--color-function);
}

/* Classes and builtins */
.token.class-name,
.token.builtin {
  color: var(--color-class);
}

/* Line number */
pre[class*="language-"].line-numbers,
pre[class*="lang-"].line-numbers {
  padding-left: var(--space-s);
}

/* Line number and rows */
.line-numbers .line-numbers-rows {
  border-right: 1px solid var(--color-line-number);
}

/* Line rows spaning */
.line-numbers-rows > span:before {
  color: var(--color-line-number);
  font-size: var(--font-small);
}

/* Line highlight */
pre[class*="language-"] > code .line-highlight {
  background: var(--color-line-hightlight);
  border-left: 3px solid var(--color--accent);
  margin-left: -var(--space-s);
  margin-right: -var(--space-s);
  padding-left: var(--space-s);
}

/* Toolbar */
div.code-toolbar > .toolbar {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;

  display: flex;
  justify-content: space-between; /* left + right split */
  align-items: center;

  padding: var(--space-xs);
  background: var(--color-banner);
  border-top-left-radius: 0.75rem;
  border-top-right-radius: 0.75rem;
  z-index: 2;
  font-size: var(--font-small);
  font-weight: var(--weight-bold);

  border-bottom: 1px solid color-mix(in srgb, var(--color-black) 15%, transparent);
  box-shadow: inset 0 -1px 0 rgba(0,0,0,0.1);
}

/* Left side: language label */
div.code-toolbar > .toolbar .toolbar-item.language-label {
  color: var(--color-language-label);
  font-kerning: normal;
  letter-spacing: calc(var(--space-3xs) * 0.32); /* derived from small spacing token */
  text-transform: uppercase;
}

/* Right side: buttons */
/* Reset the default Prism copy button */
div.code-toolbar > .toolbar .toolbar-item button {
  background: transparent;
  border: none;
  padding: 0.25rem;
  cursor: pointer;

  display: flex;
  align-items: center;
  justify-content: center;

  border-radius: 0.35rem;
  transition: background 0.2s ease, opacity 0.2s ease;
  color: inherit; /* remove default text color */
  font-size: 0;   /* hide any text fallback */
}

/* Icon inside the button */
div.code-toolbar > .toolbar .toolbar-item button::before {
  content: url("/images/copy-to-clipboard.svg");
  display: inline-block;
  width: 1rem;
  height: 1rem;
}

/* Hover effect */
div.code-toolbar > .toolbar .toolbar-item button:hover {
  background: var(--color--accent);
}

div.code-toolbar > .toolbar .toolbar-item button:hover::before {
  filter: brightness(10); /* makes icon look white-ish if SVG is dark */
}

div.code-toolbar > .toolbar .toolbar-item button.copied::before {
  content: url("/images/copied.svg");
  filter: none;
}

/* Add spacing between multiple right-side buttons if any */
div.code-toolbar > .toolbar .toolbar-item + .toolbar-item {
  margin-left: var(--space-2xs);
}
